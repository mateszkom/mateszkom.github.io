{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypePrettyCode from 'rehype-pretty-code'\r\nimport rehypeSlug from 'rehype-slug'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\n// Define Post document type for posts in 'posts' directory\r\nconst Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `posts/**/*.mdx`, // Change path pattern for posts\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      description: 'The title of the post',\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      description: 'The date of the post',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n      description: 'The description of the post',\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (doc) => `/posts/${doc._raw.flattenedPath}`,\r\n    },\r\n  },\r\n}))\r\n\r\n// Define Project document type for posts in 'projects' directory\r\nconst Project = defineDocumentType(() => ({\r\n  name: 'Project',\r\n  filePathPattern: `projects/**/*.mdx`, // Path pattern for projects\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      description: 'The title of the project',\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      description: 'The date of the project',\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: 'string',\r\n      description: 'The description of the project',\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (doc) => `/projects/${doc._raw.flattenedPath}`,\r\n    },\r\n  },\r\n}))\r\n\r\n// Export sources for both Post and Project\r\nexport default makeSource({\r\n  content: [\r\n    {\r\n      contentDirPath: 'posts',\r\n      documentTypes: [Post],\r\n      mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n          rehypeSlug,\r\n          [\r\n            rehypePrettyCode,\r\n            {\r\n              theme: 'one-dark-pro',\r\n              onVisitLine(node) {\r\n                if (node.children.length === 0) {\r\n                  node.children = [{ type: 'text', value: ' ' }]\r\n                }\r\n              },\r\n              onVisitHighlightedLine(node) {\r\n                node.properties.className.push('line--highlighted')\r\n              },\r\n              onVisitHighlightedWord(node) {\r\n                node.properties.className = ['word--highlighted']\r\n              },\r\n            },\r\n          ],\r\n          [\r\n            rehypeAutolinkHeadings,\r\n            {\r\n              properties: {\r\n                className: ['anchor'],\r\n              },\r\n            },\r\n          ],\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      contentDirPath: 'projects',\r\n      documentTypes: [Project],\r\n      mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n          rehypeSlug,\r\n          [\r\n            rehypePrettyCode,\r\n            {\r\n              theme: 'one-dark-pro',\r\n              onVisitLine(node) {\r\n                if (node.children.length === 0) {\r\n                  node.children = [{ type: 'text', value: ' ' }]\r\n                }\r\n              },\r\n              onVisitHighlightedLine(node) {\r\n                node.properties.className.push('line--highlighted')\r\n              },\r\n              onVisitHighlightedWord(node) {\r\n                node.properties.className = ['word--highlighted']\r\n              },\r\n            },\r\n          ],\r\n          [\r\n            rehypeAutolinkHeadings,\r\n            {\r\n              properties: {\r\n                className: ['anchor'],\r\n              },\r\n            },\r\n          ],\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n})\r\n"],
  "mappings": "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",
  "names": []
}
